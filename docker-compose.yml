services:
  web_api:
    build: .
    command: poetry run uvicorn web_api.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - postgres
      - prometheus
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres/tasks_db
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO

  consumer:
    build: .
    command: poetry run uvicorn consumer.main:app --host 0.0.0.0 --port 8001
    ports:
      - "8001"
    depends_on:
      - rabbitmq
      - postgres
      - prometheus
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres/tasks_db
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tasks_db
    ports:
      - "5432:5432"

  alembic:
    build: .
    command: bash /app/wait-for-it.sh postgres:5432 -t 15 -- poetry run alembic upgrade head
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:password@postgres/tasks_db
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./wait-for-it.sh:/app/wait-for-it.sh


  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  postgres_data:
